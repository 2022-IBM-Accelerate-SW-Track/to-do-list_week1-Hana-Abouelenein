{"ast":null,"code":"var _jsxFileName = \"/Users/hanaabouelenein/to-do-list_week1-Hana-Abouelenein/src/pages/Home.js\";\nimport React, { Component } from 'react';\nimport Todos from \"../component/todos.js\";\nimport AddTodo from \"../component/AddTodo.js\";\nimport \"../pages/Home.css\";\nimport { toHaveDisplayValue } from '@testing-library/jest-dom/dist/matchers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Home extends Component {\n  // A default state of this component with an empty list of todos.\n  constructor() {\n    super();\n\n    this.addTodo = todo => {\n      // In React, keys or ids in a list help identify which items have changed, been added or removed. Keys\n      // should not share duplicate values.\n      // To avoid having dup values, we use the Math.random() function to generate a random value for a todo id.\n      // This solution works for a small application but a more complex hashing function should be used when\n      // dealing with a larger data sensitive project.\n      todo.id = Math.random(); // An array that contains the current array and the new todo item\n\n      let new_list = [...this.state.todos, todo]; // Updates the local state with the new array.\n\n      this.setState({\n        todos: new_list\n      });\n    };\n\n    this.state = {\n      todos: []\n    };\n  } // the addTodo function simply creates a new array that includes the user submitted todo item and then\n  // updates the state with the new list.\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Home\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Todo's \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"replace this\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Home;","map":{"version":3,"names":["React","Component","Todos","AddTodo","toHaveDisplayValue","Home","constructor","addTodo","todo","id","Math","random","new_list","state","todos","setState","render"],"sources":["/Users/hanaabouelenein/to-do-list_week1-Hana-Abouelenein/src/pages/Home.js"],"sourcesContent":["import React, { Component } from 'react';\nimport  Todos from \"../component/todos.js\";\nimport AddTodo from \"../component/AddTodo.js\";\nimport \"../pages/Home.css\";\nimport { toHaveDisplayValue } from '@testing-library/jest-dom/dist/matchers';\n  \nclass Home extends Component {\n  // A default state of this component with an empty list of todos.\n  constructor() {\n    super();\n    this.state = {\n      todos: []\n    };\n  }\n  // the addTodo function simply creates a new array that includes the user submitted todo item and then\n  // updates the state with the new list.\n  addTodo = (todo) => {\n    // In React, keys or ids in a list help identify which items have changed, been added or removed. Keys\n    // should not share duplicate values.\n    // To avoid having dup values, we use the Math.random() function to generate a random value for a todo id.\n    // This solution works for a small application but a more complex hashing function should be used when\n    // dealing with a larger data sensitive project.\n    todo.id = Math.random();\n    // An array that contains the current array and the new todo item\n    let new_list = [...this.state.todos, todo];\n    // Updates the local state with the new array.\n    this.setState({\n      todos: new_list,\n    });\n  };\n  render() {\n    return (\n      <div className=\"Home\">\n        <h1>Todo's </h1>\n          <p>replace this</p>\n         {// <Todos todos={this.state} />\n          //<AddTodo addTodo={this.state.addTodo()} />\n         }\n      </div>\n    );\n  }\n}\n\nexport default Home;"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAQC,KAAR,MAAmB,uBAAnB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAO,mBAAP;AACA,SAASC,kBAAT,QAAmC,yCAAnC;;;AAEA,MAAMC,IAAN,SAAmBJ,SAAnB,CAA6B;EAC3B;EACAK,WAAW,GAAG;IACZ;;IADY,KAQdC,OARc,GAQHC,IAAD,IAAU;MAClB;MACA;MACA;MACA;MACA;MACAA,IAAI,CAACC,EAAL,GAAUC,IAAI,CAACC,MAAL,EAAV,CANkB,CAOlB;;MACA,IAAIC,QAAQ,GAAG,CAAC,GAAG,KAAKC,KAAL,CAAWC,KAAf,EAAsBN,IAAtB,CAAf,CARkB,CASlB;;MACA,KAAKO,QAAL,CAAc;QACZD,KAAK,EAAEF;MADK,CAAd;IAGD,CArBa;;IAEZ,KAAKC,KAAL,GAAa;MACXC,KAAK,EAAE;IADI,CAAb;EAGD,CAP0B,CAQ3B;EACA;;;EAeAE,MAAM,GAAG;IACP,oBACE;MAAK,SAAS,EAAC,MAAf;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EASD;;AAlC0B;;AAqC7B,eAAeX,IAAf"},"metadata":{},"sourceType":"module"}